// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: admin.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	AdminService_CreateProject_FullMethodName               = "/AdminService/CreateProject"
	AdminService_RemoveProject_FullMethodName               = "/AdminService/RemoveProject"
	AdminService_ListProjects_FullMethodName                = "/AdminService/ListProjects"
	AdminService_AddOrUpdateMapping_FullMethodName          = "/AdminService/AddOrUpdateMapping"
	AdminService_RemoveMapping_FullMethodName               = "/AdminService/RemoveMapping"
	AdminService_ListMappings_FullMethodName                = "/AdminService/ListMappings"
	AdminService_AddExtraVariable_FullMethodName            = "/AdminService/AddExtraVariable"
	AdminService_RemoveExtraVariable_FullMethodName         = "/AdminService/RemoveExtraVariable"
	AdminService_ListExtraVariables_FullMethodName          = "/AdminService/ListExtraVariables"
	AdminService_AddOrUpdateCalculatedFields_FullMethodName = "/AdminService/AddOrUpdateCalculatedFields"
	AdminService_RemoveCalculatedFields_FullMethodName      = "/AdminService/RemoveCalculatedFields"
	AdminService_ListCalculatedFields_FullMethodName        = "/AdminService/ListCalculatedFields"
)

// AdminServiceClient is the client API for AdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Administrative tasks in this service
type AdminServiceClient interface {
	// Creates a csv2json transformation project
	CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error)
	// Remove a project and all related data
	RemoveProject(ctx context.Context, in *RemoveProjectRequest, opts ...grpc.CallOption) (*RemoveProjectResponse, error)
	// List projects
	ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error)
	// Add or update a field mapping to a project (or multiple)
	AddOrUpdateMapping(ctx context.Context, in *AddOrUpdateMappingRequest, opts ...grpc.CallOption) (*AddOrUpdateMappingResponse, error)
	// Remove mapping(s)
	RemoveMapping(ctx context.Context, in *RemoveMappingRequest, opts ...grpc.CallOption) (*RemoveMappingResponse, error)
	// List mappings for project
	ListMappings(ctx context.Context, in *ListMappingsRequest, opts ...grpc.CallOption) (*ListMappingsResponse, error)
	// Add extra variables to reference in calculated fields
	AddExtraVariable(ctx context.Context, in *AddExtraVariableRequest, opts ...grpc.CallOption) (*AddExtraVariableResponse, error)
	// Remove extra variables from project
	RemoveExtraVariable(ctx context.Context, in *RemoveExtraVariableRequest, opts ...grpc.CallOption) (*RemoveExtraVariableResponse, error)
	// List extra variables for project
	ListExtraVariables(ctx context.Context, in *ListExtraVariablesRequest, opts ...grpc.CallOption) (*ListExtraVariablesResponse, error)
	// Add or update one or more calculated fields
	AddOrUpdateCalculatedFields(ctx context.Context, in *AddOrUpdateCalculatedFieldsRequest, opts ...grpc.CallOption) (*AddOrUpdateCalculatedFieldsResponse, error)
	// Remove one or more calculated fields
	RemoveCalculatedFields(ctx context.Context, in *RemoveCalculatedFieldsRequest, opts ...grpc.CallOption) (*RemoveCalculatedFieldsResponse, error)
	// List calulated fields for projects
	ListCalculatedFields(ctx context.Context, in *ListCalculatedFieldsRequest, opts ...grpc.CallOption) (*ListCalculatedFieldsResponse, error)
}

type adminServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminServiceClient(cc grpc.ClientConnInterface) AdminServiceClient {
	return &adminServiceClient{cc}
}

func (c *adminServiceClient) CreateProject(ctx context.Context, in *CreateProjectRequest, opts ...grpc.CallOption) (*CreateProjectResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateProjectResponse)
	err := c.cc.Invoke(ctx, AdminService_CreateProject_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RemoveProject(ctx context.Context, in *RemoveProjectRequest, opts ...grpc.CallOption) (*RemoveProjectResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveProjectResponse)
	err := c.cc.Invoke(ctx, AdminService_RemoveProject_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ListProjects(ctx context.Context, in *ListProjectsRequest, opts ...grpc.CallOption) (*ListProjectsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListProjectsResponse)
	err := c.cc.Invoke(ctx, AdminService_ListProjects_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddOrUpdateMapping(ctx context.Context, in *AddOrUpdateMappingRequest, opts ...grpc.CallOption) (*AddOrUpdateMappingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddOrUpdateMappingResponse)
	err := c.cc.Invoke(ctx, AdminService_AddOrUpdateMapping_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RemoveMapping(ctx context.Context, in *RemoveMappingRequest, opts ...grpc.CallOption) (*RemoveMappingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveMappingResponse)
	err := c.cc.Invoke(ctx, AdminService_RemoveMapping_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ListMappings(ctx context.Context, in *ListMappingsRequest, opts ...grpc.CallOption) (*ListMappingsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListMappingsResponse)
	err := c.cc.Invoke(ctx, AdminService_ListMappings_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddExtraVariable(ctx context.Context, in *AddExtraVariableRequest, opts ...grpc.CallOption) (*AddExtraVariableResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddExtraVariableResponse)
	err := c.cc.Invoke(ctx, AdminService_AddExtraVariable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RemoveExtraVariable(ctx context.Context, in *RemoveExtraVariableRequest, opts ...grpc.CallOption) (*RemoveExtraVariableResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveExtraVariableResponse)
	err := c.cc.Invoke(ctx, AdminService_RemoveExtraVariable_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ListExtraVariables(ctx context.Context, in *ListExtraVariablesRequest, opts ...grpc.CallOption) (*ListExtraVariablesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListExtraVariablesResponse)
	err := c.cc.Invoke(ctx, AdminService_ListExtraVariables_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) AddOrUpdateCalculatedFields(ctx context.Context, in *AddOrUpdateCalculatedFieldsRequest, opts ...grpc.CallOption) (*AddOrUpdateCalculatedFieldsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(AddOrUpdateCalculatedFieldsResponse)
	err := c.cc.Invoke(ctx, AdminService_AddOrUpdateCalculatedFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) RemoveCalculatedFields(ctx context.Context, in *RemoveCalculatedFieldsRequest, opts ...grpc.CallOption) (*RemoveCalculatedFieldsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(RemoveCalculatedFieldsResponse)
	err := c.cc.Invoke(ctx, AdminService_RemoveCalculatedFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminServiceClient) ListCalculatedFields(ctx context.Context, in *ListCalculatedFieldsRequest, opts ...grpc.CallOption) (*ListCalculatedFieldsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListCalculatedFieldsResponse)
	err := c.cc.Invoke(ctx, AdminService_ListCalculatedFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServiceServer is the server API for AdminService service.
// All implementations must embed UnimplementedAdminServiceServer
// for forward compatibility.
//
// Administrative tasks in this service
type AdminServiceServer interface {
	// Creates a csv2json transformation project
	CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error)
	// Remove a project and all related data
	RemoveProject(context.Context, *RemoveProjectRequest) (*RemoveProjectResponse, error)
	// List projects
	ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error)
	// Add or update a field mapping to a project (or multiple)
	AddOrUpdateMapping(context.Context, *AddOrUpdateMappingRequest) (*AddOrUpdateMappingResponse, error)
	// Remove mapping(s)
	RemoveMapping(context.Context, *RemoveMappingRequest) (*RemoveMappingResponse, error)
	// List mappings for project
	ListMappings(context.Context, *ListMappingsRequest) (*ListMappingsResponse, error)
	// Add extra variables to reference in calculated fields
	AddExtraVariable(context.Context, *AddExtraVariableRequest) (*AddExtraVariableResponse, error)
	// Remove extra variables from project
	RemoveExtraVariable(context.Context, *RemoveExtraVariableRequest) (*RemoveExtraVariableResponse, error)
	// List extra variables for project
	ListExtraVariables(context.Context, *ListExtraVariablesRequest) (*ListExtraVariablesResponse, error)
	// Add or update one or more calculated fields
	AddOrUpdateCalculatedFields(context.Context, *AddOrUpdateCalculatedFieldsRequest) (*AddOrUpdateCalculatedFieldsResponse, error)
	// Remove one or more calculated fields
	RemoveCalculatedFields(context.Context, *RemoveCalculatedFieldsRequest) (*RemoveCalculatedFieldsResponse, error)
	// List calulated fields for projects
	ListCalculatedFields(context.Context, *ListCalculatedFieldsRequest) (*ListCalculatedFieldsResponse, error)
	mustEmbedUnimplementedAdminServiceServer()
}

// UnimplementedAdminServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedAdminServiceServer struct{}

func (UnimplementedAdminServiceServer) CreateProject(context.Context, *CreateProjectRequest) (*CreateProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProject not implemented")
}
func (UnimplementedAdminServiceServer) RemoveProject(context.Context, *RemoveProjectRequest) (*RemoveProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProject not implemented")
}
func (UnimplementedAdminServiceServer) ListProjects(context.Context, *ListProjectsRequest) (*ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (UnimplementedAdminServiceServer) AddOrUpdateMapping(context.Context, *AddOrUpdateMappingRequest) (*AddOrUpdateMappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateMapping not implemented")
}
func (UnimplementedAdminServiceServer) RemoveMapping(context.Context, *RemoveMappingRequest) (*RemoveMappingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveMapping not implemented")
}
func (UnimplementedAdminServiceServer) ListMappings(context.Context, *ListMappingsRequest) (*ListMappingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMappings not implemented")
}
func (UnimplementedAdminServiceServer) AddExtraVariable(context.Context, *AddExtraVariableRequest) (*AddExtraVariableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddExtraVariable not implemented")
}
func (UnimplementedAdminServiceServer) RemoveExtraVariable(context.Context, *RemoveExtraVariableRequest) (*RemoveExtraVariableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveExtraVariable not implemented")
}
func (UnimplementedAdminServiceServer) ListExtraVariables(context.Context, *ListExtraVariablesRequest) (*ListExtraVariablesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListExtraVariables not implemented")
}
func (UnimplementedAdminServiceServer) AddOrUpdateCalculatedFields(context.Context, *AddOrUpdateCalculatedFieldsRequest) (*AddOrUpdateCalculatedFieldsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddOrUpdateCalculatedFields not implemented")
}
func (UnimplementedAdminServiceServer) RemoveCalculatedFields(context.Context, *RemoveCalculatedFieldsRequest) (*RemoveCalculatedFieldsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveCalculatedFields not implemented")
}
func (UnimplementedAdminServiceServer) ListCalculatedFields(context.Context, *ListCalculatedFieldsRequest) (*ListCalculatedFieldsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCalculatedFields not implemented")
}
func (UnimplementedAdminServiceServer) mustEmbedUnimplementedAdminServiceServer() {}
func (UnimplementedAdminServiceServer) testEmbeddedByValue()                      {}

// UnsafeAdminServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AdminServiceServer will
// result in compilation errors.
type UnsafeAdminServiceServer interface {
	mustEmbedUnimplementedAdminServiceServer()
}

func RegisterAdminServiceServer(s grpc.ServiceRegistrar, srv AdminServiceServer) {
	// If the following call pancis, it indicates UnimplementedAdminServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&AdminService_ServiceDesc, srv)
}

func _AdminService_CreateProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).CreateProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_CreateProject_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).CreateProject(ctx, req.(*CreateProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RemoveProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RemoveProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_RemoveProject_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RemoveProject(ctx, req.(*RemoveProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_ListProjects_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ListProjects(ctx, req.(*ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddOrUpdateMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrUpdateMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddOrUpdateMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AddOrUpdateMapping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddOrUpdateMapping(ctx, req.(*AddOrUpdateMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RemoveMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RemoveMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_RemoveMapping_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RemoveMapping(ctx, req.(*RemoveMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ListMappings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMappingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ListMappings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_ListMappings_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ListMappings(ctx, req.(*ListMappingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddExtraVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddExtraVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddExtraVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AddExtraVariable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddExtraVariable(ctx, req.(*AddExtraVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RemoveExtraVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveExtraVariableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RemoveExtraVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_RemoveExtraVariable_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RemoveExtraVariable(ctx, req.(*RemoveExtraVariableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ListExtraVariables_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListExtraVariablesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ListExtraVariables(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_ListExtraVariables_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ListExtraVariables(ctx, req.(*ListExtraVariablesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_AddOrUpdateCalculatedFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddOrUpdateCalculatedFieldsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).AddOrUpdateCalculatedFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_AddOrUpdateCalculatedFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).AddOrUpdateCalculatedFields(ctx, req.(*AddOrUpdateCalculatedFieldsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_RemoveCalculatedFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCalculatedFieldsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).RemoveCalculatedFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_RemoveCalculatedFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).RemoveCalculatedFields(ctx, req.(*RemoveCalculatedFieldsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AdminService_ListCalculatedFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCalculatedFieldsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServiceServer).ListCalculatedFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AdminService_ListCalculatedFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServiceServer).ListCalculatedFields(ctx, req.(*ListCalculatedFieldsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AdminService_ServiceDesc is the grpc.ServiceDesc for AdminService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AdminService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "AdminService",
	HandlerType: (*AdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProject",
			Handler:    _AdminService_CreateProject_Handler,
		},
		{
			MethodName: "RemoveProject",
			Handler:    _AdminService_RemoveProject_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _AdminService_ListProjects_Handler,
		},
		{
			MethodName: "AddOrUpdateMapping",
			Handler:    _AdminService_AddOrUpdateMapping_Handler,
		},
		{
			MethodName: "RemoveMapping",
			Handler:    _AdminService_RemoveMapping_Handler,
		},
		{
			MethodName: "ListMappings",
			Handler:    _AdminService_ListMappings_Handler,
		},
		{
			MethodName: "AddExtraVariable",
			Handler:    _AdminService_AddExtraVariable_Handler,
		},
		{
			MethodName: "RemoveExtraVariable",
			Handler:    _AdminService_RemoveExtraVariable_Handler,
		},
		{
			MethodName: "ListExtraVariables",
			Handler:    _AdminService_ListExtraVariables_Handler,
		},
		{
			MethodName: "AddOrUpdateCalculatedFields",
			Handler:    _AdminService_AddOrUpdateCalculatedFields_Handler,
		},
		{
			MethodName: "RemoveCalculatedFields",
			Handler:    _AdminService_RemoveCalculatedFields_Handler,
		},
		{
			MethodName: "ListCalculatedFields",
			Handler:    _AdminService_ListCalculatedFields_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "admin.proto",
}
